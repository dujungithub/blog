{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{385:function(t,s,a){\"use strict\";a.r(s);var n=a(43),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"js\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js\"}},[t._v(\"#\")]),t._v(\" JS\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"内置类型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#内置类型\"}},[t._v(\"#\")]),t._v(\" 内置类型\")]),t._v(\" \"),a(\"p\",[t._v(\"JS 中分为七种内置类型，七种内置类型分为两大类型：基本类型和对象（Object）。\")]),t._v(\" \"),a(\"p\",[t._v(\"基本类型有六种：\"),a(\"code\",[t._v(\"null\")]),t._v(\" , \"),a(\"code\",[t._v(\"undefined\")]),t._v(\", \"),a(\"code\",[t._v(\"boolean\")]),t._v(\" , \"),a(\"code\",[t._v(\"number\")]),t._v(\" , \"),a(\"code\",[t._v(\"string\")]),t._v(\" , \"),a(\"code\",[t._v(\"symbol\")]),t._v(\" 。\")]),t._v(\" \"),a(\"p\",[t._v(\"其中 JS 的数字类型是浮点类型的，没有整型。并且浮点类型基于 IEEE754标准实现，\\nNaN 也属于 \"),a(\"code\",[t._v(\"number\")]),t._v(\" 类型 , 不等于自身。\")]),t._v(\" \"),a(\"p\",[t._v(\"对于基础类型，只有在必要的时候才会由字面量转换为对应的类型。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"111\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//这只是字面量，不是number类型\")]),t._v(\"\\na\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"toString\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//使用时会转换为对象类型\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"对象Object是引用类型，在使用时有浅拷贝和深拷贝的问题。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'1'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//1\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" b \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" a\\nb\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"n \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'2'\")]),t._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//2\")]),t._v(\"\\n\")])])]),a(\"h2\",{attrs:{id:\"typeof\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#typeof\"}},[t._v(\"#\")]),t._v(\" Typeof\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"typeof\")]),t._v(\" 检测当前所属类型，除了 \"),a(\"code\",[t._v(\"null\")]),t._v(\" 都可以正确显示\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// number\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'1'\")]),t._v(\"\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//string\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"undefined\")]),t._v(\"\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//undefined\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),t._v(\"\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//boolean\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Symbol\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//symbol\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),t._v(\"\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//object\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" Number\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//function\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" a\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//a 没有声明，显示 undefined\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//object\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//object\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" 任意函数\\t\\t \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//function\")]),t._v(\"\\n\")])])]),a(\"p\",[a(\"code\",[t._v(\"null\")]),t._v(\" 是最初设计时系统是32位系统，存储变量类型信息，000开头代表对象，但是\"),a(\"code\",[t._v(\"null\")]),t._v(\"全部为零，所以也认为是 \"),a(\"code\",[t._v(\"object\")]),t._v(\" 了。 现在储存变量方式改变了，但是这个问题bug一直保留了。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"如何获取正确类型\")]),t._v(\"\\n通过 \"),a(\"code\",[t._v(\"Object.prototype.toString.call(***)\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"toString\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"call\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n控制台：\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"[object Null]\"')]),t._v(\"\\n\")])])]),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"判断 undefined\\n// 因为 void 后面随便跟上一个组成表达式\\n// 返回就是 undefined\\nlet a\\na === undefined\\na === void 0  //true\\n\")])])]),a(\"h2\",{attrs:{id:\"类型转换\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类型转换\"}},[t._v(\"#\")]),t._v(\" 类型转换\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[t._v(\"### 转Boolean\\n\")])])]),a(\"p\",[t._v(\"为 \"),a(\"code\",[t._v(\"false\")]),t._v(\" 的值有：\\t\"),a(\"code\",[t._v(\"undefined null false NaN ' ' 0 -0\")])]),t._v(\" \"),a(\"p\",[t._v(\"其余都为 \"),a(\"code\",[t._v(\"true\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"对象转基本类型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#对象转基本类型\"}},[t._v(\"#\")]),t._v(\" 对象转基本类型\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"this\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#this\"}},[t._v(\"#\")]),t._v(\" this\")]),t._v(\" \"),a(\"p\",[t._v(\"this 指向 window\")]),t._v(\" \"),a(\"p\",[t._v(\"如果外层是--\\x3e\")]),t._v(\" \"),a(\"p\",[t._v(\"​\\t--\\x3e箭头函数，继续向上找，\")]),t._v(\" \"),a(\"p\",[t._v(\"​\\t\\t--\\x3e找到方法，是不是对象中的 ，\")]),t._v(\" \"),a(\"p\",[t._v(\"​\\t\\t\\t--\\x3e是对象中的方法就是对象本身，\")]),t._v(\" \"),a(\"p\",[t._v(\"​\\t\\t\\t--\\x3e如果不是对象，那就是指向window\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"闭包\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#闭包\"}},[t._v(\"#\")]),t._v(\" 闭包\")]),t._v(\" \"),a(\"p\",[t._v(\"定义：函数A return 函数B ， 函数B 用了函数A 内部的变量 ，函数B 就是闭包\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('function A(){\\n\\tlet str = \"内部参数\"\\n\\tfunction B(){\\n\\t\\tconsole.log(str)\\n\\t}\\n\\treturn B\\n}\\nA()();//内部参数\\n')])])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}