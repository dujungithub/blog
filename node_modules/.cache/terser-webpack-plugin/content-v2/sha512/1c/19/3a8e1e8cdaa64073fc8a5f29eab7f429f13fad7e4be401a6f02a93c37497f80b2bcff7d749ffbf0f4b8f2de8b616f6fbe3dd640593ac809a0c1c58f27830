{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{400:function(t,n,e){\"use strict\";e.r(n);var a=e(43),s=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"子父组件多级调用\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#子父组件多级调用\"}},[t._v(\"#\")]),t._v(\" 子父组件多级调用\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"父组件调用子组件的方法\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#父组件调用子组件的方法\"}},[t._v(\"#\")]),t._v(\" 父组件调用子组件的方法\")]),t._v(\" \"),e(\"p\",[t._v(\"在子组件中加上ref即可通过this.$refs.ref.method调用子组件的方法\")]),t._v(\" \"),e(\"p\",[t._v(\"父组件部分：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('<template>\\n    <div id=\"parent\">\\n        <v-child ref=\"vchild\"></v-child>\\n    </div>\\n</template>\\n\\n<script>\\n\\texport default {\\n\\t    name: \"Parent\",\\n\\t    data () {\\n\\t        return {\\n\\t            msg: \"from parent\"\\n\\t        }\\n\\t    },\\n\\t    components: {\\n\\t        vChild: () => import(\"./vChild.vue\")\\n\\t    },\\n\\t    methods: {\\n\\t        this.$refs.vchild.childMethod(this.msg); \\n\\t    }\\n\\t}\\n<\\/script>\\n')])])]),e(\"p\",[t._v(\"子组件部分：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('<template>\\n    <div id=\"child\">\\n        {{msg}}\\n    </div>\\n</template>\\n\\n<script>\\n\\texport default {\\n\\t    name: \"Child\",\\n\\t    props: [\"msg\"],\\n\\t    data () {\\n\\t        return {\\n\\t            msg: \"\"\\n\\t        }\\n\\t    },\\n\\t    methods: {\\n\\t        childMethod (msg) {\\n\\t            this.msg = msg\\n\\t        }\\n\\t    }\\n\\t}\\n<\\/script>\\n')])])]),e(\"hr\"),t._v(\" \"),e(\"h2\",{attrs:{id:\"子组件调用父组件方法（方式一）\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#子组件调用父组件方法（方式一）\"}},[t._v(\"#\")]),t._v(\" 子组件调用父组件方法（方式一）\")]),t._v(\" \"),e(\"p\",[t._v(\"父组件部分：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('<template>\\n    <div id=\"parent\">\\n        <v-child @parentHandle=\"childHandle\"></v-child>\\n    </div>\\n</template>\\n\\n<script>\\n\\texport default {\\n\\t    name: \"Parent\",\\n\\t    data () {\\n\\t        return {\\n\\t            parentMsg: \"from parent\"\\n\\t        }\\n\\t    },\\n\\t    components: {\\n\\t        vChild: () => import(\"./vChild.vue\")\\n\\t    },\\n\\t    methods: {\\n\\t        childHandle(msg){\\n\\t            console.log(msg)\\n\\t        }\\n\\t    }\\n\\t}\\n<\\/script>\\n')])])]),e(\"h2\",{attrs:{id:\"父组件中的-childhandle-方法以-parenthandle-名称传递给子组件\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#父组件中的-childhandle-方法以-parenthandle-名称传递给子组件\"}},[t._v(\"#\")]),t._v(\" 父组件中的 childHandle 方法以 parentHandle 名称传递给子组件\")]),t._v(\" \"),e(\"p\",[t._v(\"子组件部分:\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('<template>\\n    <div id=\"child\">\\n        <input type=\"text\" v-model=\"msg\" @change=\"inputChange\" />\\n    </div>\\n</template>\\n\\n<script>\\n\\texport default {\\n\\t    name: \"Child\",\\n\\t    data () {\\n\\t        return {\\n\\t            msg: \"\"\\n\\t        }\\n\\t    },\\n\\t    methods: {\\n\\t        inputChange () {\\n\\t            this.$emit(\"parentHandle\", this.msg)\\n\\t        }\\n\\t    }\\n\\t}\\n<\\/script>\\n')])])]),e(\"hr\"),t._v(\" \"),e(\"h2\",{attrs:{id:\"子组件调用父组件方法（方式二）\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#子组件调用父组件方法（方式二）\"}},[t._v(\"#\")]),t._v(\" 子组件调用父组件方法（方式二）\")]),t._v(\" \"),e(\"p\",[t._v(\"父组件部分：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('<template>\\n    <div id=\"parent\">\\n        <v-child></v-child>\\n    </div>\\n</template>\\n\\n<script>\\n\\texport default {\\n\\t    name: \"Parent\",\\n\\t    data () {\\n\\t        return {\\n\\t            parentMsg: \"from parent\"\\n\\t        }\\n\\t    },\\n\\t    provide(){\\n\\t        return {\\n\\t            parentHandle: this.childHandle\\n\\t        }\\n\\t    },\\n\\t    components: {\\n\\t        vChild: () => import(\"./vChild.vue\")\\n\\t    },\\n\\t    methods: {\\n\\t        childHandle(msg){\\n\\t            console.log(msg)\\n\\t        }\\n\\t    }\\n\\t}\\n<\\/script>\\n')])])]),e(\"h2\",{attrs:{id:\"父组件通过-provide-将数据传递给子组件。\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#父组件通过-provide-将数据传递给子组件。\"}},[t._v(\"#\")]),t._v(\" 父组件通过 provide 将数据传递给子组件。\")]),t._v(\" \"),e(\"p\",[t._v(\"子组件部分：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('<template>\\n    <div id=\"child\">\\n        <input type=\"text\" v-model=\"msg\" @change=\"inputChange\" />\\n    </div>\\n</template>\\n\\n<script>\\n\\texport default {\\n\\t    name: \"Child\",\\n\\t    inject: [\"parentHandle\"],\\n\\t    data () {\\n\\t        return {\\n\\t            msg: \"\"\\n\\t        }\\n\\t    },\\n\\t    methods: {\\n\\t        inputChange () {\\n\\t            this.parentHandle(this.msg)\\n\\t        }\\n\\t    }\\n\\t}\\n<\\/script>\\n')])])]),e(\"p\",[t._v(\"子组件通过 inject 接收父组件的数据。\")]),t._v(\" \"),e(\"p\",[t._v(\"该方法可跨越多层传递数据。\")]),t._v(\" \"),e(\"hr\"),t._v(\" \"),e(\"h2\",{attrs:{id:\"子组件间方法调用\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#子组件间方法调用\"}},[t._v(\"#\")]),t._v(\" 子组件间方法调用\")]),t._v(\" \"),e(\"p\",[t._v(\"子组件间方法调用可以通过父组件中转的方法。比如A、B为子组件，C为父组件，\\nA要调用B的方法，方法是A调用C的方法，然后C在被A调用的方法中调用B的方法。\")])])}),[],!1,null,null,null);n.default=s.exports}}]);","extractedComments":[]}