{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{402:function(t,a,s){\"use strict\";s.r(a);var n=s(43),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"前端内存泄漏\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前端内存泄漏\"}},[t._v(\"#\")]),t._v(\" 前端内存泄漏\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"不再用到的内存，没有及时释放，就叫做内存泄漏（memory leak）。\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"产生内存泄露的原因\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#产生内存泄露的原因\"}},[t._v(\"#\")]),t._v(\" \"),s(\"strong\",[t._v(\"产生内存泄露的原因\")])]),t._v(\" \"),s(\"ol\",[s(\"li\",[s(\"p\",[t._v(\"使用了全局变量\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"闭包引起的内存泄漏\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"没有清理的DOM元素引用 （setInterval，addEventListener，$(window).on('scroll/click...')等）\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"定时器以及其中的引用\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"vue中使用eventbus的时候没有$off,vuex中$store.watch监听后没有释放，要记得unwatch一下。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"使用第三方库创建的时候没有调用正确的销毁函数\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"不断调用echart导致内存泄露\")])])]),t._v(\" \"),s(\"p\",[t._v(\"不停的用setInterval调用echart，更新echart表格及地图数据，及时清理了setInterval，也会导致内存泄露！\")]),t._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://www.cnblogs.com/lanhuo666/p/11626936.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://www.cnblogs.com/lanhuo666/p/11626936.html\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://www.cnblogs.com/leftJS/p/11083191.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://www.cnblogs.com/leftJS/p/11083191.html\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"h2\",{attrs:{id:\"什么是内存泄漏？\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是内存泄漏？\"}},[t._v(\"#\")]),t._v(\" 什么是内存泄漏？\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"程序的运行需要内存。只要程序提出要求，操作系统或者运行时**（runtime）**就必须供给内存。\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"对于持续运行的服务进程**（daemon）**，必须及时释放不再用到的内存。否则，内存占用越来越高，轻则影响系统性能:变慢，延迟大等 ，重则导致进程崩溃。\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"不再用到的内存，没有及时释放，就叫做内存泄漏（memory leak）。\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"内存泄漏的识别方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#内存泄漏的识别方法\"}},[t._v(\"#\")]),t._v(\" 内存泄漏的识别方法\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[s(\"p\",[t._v(\"使用快捷键 F12 或者 Ctrl+Shift+J 打开 Chrome 浏览器的「开发者工具」。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"选择 Performance(老版为Timeline) 选项卡，在 Capture 选项中，只勾选 Memory。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"设置完成后，点击最左边的 Record 按钮，然后就可以访问网页了。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"打开一个网站，例如：www.taobao.com当网页加载完成后，点击 Stop，等待分析结果。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"然后在 Chart View 上寻找内存急速下降的部分，查看对应的 Event Log，可以从中找到GC 的日志。\")])])]),t._v(\" \"),s(\"p\",[t._v(\"具体过程如下图所示：\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https:////upload-images.jianshu.io/upload_images/10153392-b41c217eb5ddee3e?imageMogr2/auto-orient/strip%7CimageView2/2/w/755/format/webp\",alt:\"img\"}})]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"JVM堆内存被分为两部分：年轻代（Young Generation）和老年代（Old Generation）。\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[s(\"img\",{attrs:{src:\"G:%5C%E6%96%B0-dujun-%E5%8D%9A%E5%AE%A2%5Cvuepress%5Cdocs%5Cjs%5Cassets%5C0.jpg\",alt:\"img\"}})])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"垃圾回收叫做-minor-gc\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#垃圾回收叫做-minor-gc\"}},[t._v(\"#\")]),t._v(\" 垃圾回收叫做 \"),s(\"code\",[t._v(\"Minor GC\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"老年代的垃圾收集叫做-major-gc\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#老年代的垃圾收集叫做-major-gc\"}},[t._v(\"#\")]),t._v(\" 老年代的垃圾收集叫做 \"),s(\"code\",[t._v(\"Major GC\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"Major GC\")]),t._v(\"通常是跟 \"),s(\"code\",[t._v(\"full GC\")]),t._v(\"是等价的，收集整个GC堆\")]),t._v(\" \"),s(\"li\",[t._v(\"Full GC定义是相对明确的，就是针对整个新生代、老生代、元空间（metaspace，java8以上版本取代perm gen）的全局范围的GC。\")])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"_1-年轻代-minor-gc\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-年轻代-minor-gc\"}},[t._v(\"#\")]),t._v(\" 1.年轻代  Minor GC\")]),t._v(\" \"),s(\"p\",[t._v(\"年轻代是所有新对象产生的地方。当年轻代内存空间被用完时，就会触发垃圾回收。这个垃圾回收叫做Minor GC。年轻代被分为3个部分——Enden区和两个Survivor区。\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"_2-年老代-major-gc\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-年老代-major-gc\"}},[t._v(\"#\")]),t._v(\" 2.年老代  Major GC\")]),t._v(\" \"),s(\"p\",[t._v(\"年老代内存里包含了长期存活的对象和经过多次Minor GC后依然存活下来的对象。通常会在老年代内存被占满时进行垃圾回收。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"内存泄露的常见原因及处理方式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#内存泄露的常见原因及处理方式\"}},[t._v(\"#\")]),t._v(\" 内存泄露的常见原因及处理方式\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"常见原因：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常见原因：\"}},[t._v(\"#\")]),t._v(\" 常见原因：\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"_1-意外的全局变量\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-意外的全局变量\"}},[t._v(\"#\")]),t._v(\" 1. 意外的全局变量\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"下面代码中变量\"),s(\"code\",[t._v(\"bar\")]),t._v(\"在\"),s(\"code\",[t._v(\"foo\")]),t._v(\"函数内,但是\"),s(\"code\",[t._v(\"bar\")]),t._v(\"并没有声明\"),s(\"code\",[t._v(\"JS\")]),t._v(\"就会默认将它变为全局变量,这样在页面关闭之前都不会被释放\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-jsx extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-jsx\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  bar\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"\\n  console\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'bar没有被声明!'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//函数 foo 内部忘记使用 var ，意外创建了一个全局变量,在浏览器中，全局对象是 window \")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//真相是：\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    window\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"bar \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//严重的情况，另一种意外的全局变量可能由 this 创建，this指向了全局对象window\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"bar \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"b 没被声明,会变成一个全局变量,在页面关闭之前不会被释放.使用严格模式可以避免.\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"在 JavaScript 文件头部加上 \"),s(\"code\",[t._v(\"'use strict'\")]),t._v(\"，可以避免此类错误发生。启用严格模式解析 JavaScript ，避免意外的全局变量。\")])])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"_2-dom清空时，还存在引用\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-dom清空时，还存在引用\"}},[t._v(\"#\")]),t._v(\" 2. dom清空时，还存在引用\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"很多时候,为了方便存取,经常会将 \"),s(\"code\",[t._v(\"DOM\")]),t._v(\" 结点暂时存储到数据结构中.但是在不需要该\"),s(\"code\",[t._v(\"DOM\")]),t._v(\"节点时,忘记解除对它的引用,则会造成内存泄露.\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-dart extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-dart\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" element \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  shotCat\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" document\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getElementById\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'shotCat'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\ndocument\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"body\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"removeChild\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"document\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getElementById\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'shotCat'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 如果element没有被回收,这里移除了 shotCat 节点也是没用的,shotCat 节点依然留存在内存中.\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"与此类似情景还有: DOM 节点绑定了事件, 但是在移除的时候没有解除事件绑定,那么仅仅移除 DOM 节点也是没用的\")])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"_3-定时器中的内存泄漏\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-定时器中的内存泄漏\"}},[t._v(\"#\")]),t._v(\" 3. 定时器中的内存泄漏\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-jsx extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-jsx\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" someResource \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getData\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setInterval\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" node \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" document\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getElementById\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'Node'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"node\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    node\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"innerHTML \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"JSON\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"stringify\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"someResource\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1000\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"如果没有清除定时器,那么 someResource 就不会被释放,如果刚好它又占用了较大内存,就会引发性能问题. 但是 \"),s(\"strong\",[t._v(\"setTimeout ,它计时结束后它的回调里面引用的对象占用的内存是可以被回收的.\")]),t._v(\" 当然有些场景 setTimeout 的计时可能很长, 这样的情况下也是需要纳入考虑的.\")])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"_4-不规范地使用闭包\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-不规范地使用闭包\"}},[t._v(\"#\")]),t._v(\" 4. 不规范地使用闭包\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"相互循环引用.这是经常容易犯的错误,并且有时也\"),s(\"strong\",[t._v(\"不容易\")]),t._v(\"发现.\")])]),t._v(\" \"),s(\"p\",[t._v(\"例如:\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-jsx extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-jsx\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" a \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"bar\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \\n    console\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n  a\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"fn \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" bar\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" bar\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"bar和a形成了相互循环引用.可能有人说bar里不使用console.log(a)不就没有引用了吗就不会造成内存泄露了.NONONO,\"),s(\"strong\",[t._v(\"bar作为一个闭包,即使它内部什么都没有,foo中的所有变量都还是隐式地被 bar所引用。\")]),t._v(\" \"),s(\"strong\",[t._v(\"即使bar内什么都没有还是造成了循环引用\")]),t._v(\",那真正的解决办法就是,不要将a.fn = bar.\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"避免策略：\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#避免策略：\"}},[t._v(\"#\")]),t._v(\" 避免策略：\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"1.\")]),t._v(\"  减少不必要的全局变量，或者生命周期较长的对象，及时对无用的数据进行垃圾回收(\"),s(\"strong\",[t._v(\"即赋值为null\")]),t._v(\")；\\n\"),s(\"strong\",[t._v(\"2.\")]),t._v(\"  注意程序逻辑，避免**“死循环”**之类的 ；\\n\"),s(\"strong\",[t._v(\"3.\")]),t._v(\"  避免创建过多的对象 原则：\"),s(\"strong\",[t._v(\"不用了的东西要记得及时归还。\")]),t._v(\" \"),s(\"strong\",[t._v(\"4.\")]),t._v(\"  减少层级过多的引用\")])])}),[],!1,null,null,null);a.default=r.exports}}]);","extractedComments":[]}